name: "Trigger Chaos Pipeline on Comment"

on:
    issue_comment:
        types: [created]

jobs:
    Trigger-Chaos:
        name: push-docker
        runs-on: ubuntu-latest
        if: github.event.issue.pull_request && contains(github.event.comment.body, '/run-chaos')
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                username: ${{secrets.DOCKER_USERNAME}}
                password: ${{secrets.DOCKER_PASSWORD}}
            - name: Create tag
              id: create-tag
              run: ./ci/create_docker_tag.sh
              env:
                PR_TITLE: "${{ github.event.pull_request.title }}"
            - name: Check if image exists
              id: check-image
              run: |
                if ! docker image inspect semitechnologies/weaviate:${{ steps.create-tag.outputs.PREVIEW_TAG }} >/dev/null 2>&1; then
                    echo "::set-output name=image_exists::false"
                else
                    echo "::set-output name=image_exists::true"
                fi
            - name: Push container
              run: |
                if [[ "${{ steps.check-image.outputs.image_exists }}" == "false" ]]; then
                    ./ci/push_docker.sh
                else
                    echo "Docker image semitechnologies/weaviate:${{ steps.create-tag.outputs.PREVIEW_TAG }} already exists. Skipping push."
                fi
              env:
                PREVIEW_TAG: "${{ steps.create-tag.outputs.PREVIEW_TAG }}"
            - name: Trigger chaos-pipeline for image
              env:
                WEAVIATE_VERSION: ${{ steps.create-tag.outputs.PREVIEW_TAG }}
              uses: convictional/trigger-workflow-and-wait@v1.6.5
              with:
                owner: jfrancoa
                repo: weaviate-chaos-engineering
                github_token: ${{ secrets.CHAOS_ENGINEERING_TOKEN }}
                workflow_file_name: tests.yaml
                ref: main
                wait_interval: 30
                propagate_failure: true
                trigger_workflow: true
                wait_workflow: true

